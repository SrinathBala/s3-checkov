name: checkov_test
on:
  push:

permissions: read-all

jobs:
  Synthstack:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'eu-central-1'
      - name: Install dependencies
        run: npm install

      - name: Synthesize CloudFormation template
        run: npx cdk synth --output=template

      - uses: actions/checkout@v3

      # Other steps that change files in the repository

      # Commit all changed files back to the repository
      - uses: stefanzweifel/git-auto-commit-action@v4


  # format-code:
  #   runs-on: ubuntu-latest
  #   needs: Synthstack
  #   permissions:
  #     # Give the default GITHUB_TOKEN write permission to commit and push the
  #     # added or changed files to the repository.
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v3

  #     # Other steps that change files in the repository

  #     # Commit all changed files back to the repository
  #     - uses: stefanzweifel/git-auto-commit-action@v4


  checkov:
    runs-on: ubuntu-latest
    needs: format-code
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Checkov
        run: |
          pip3 install checkov
      - name: Checkov Scan
        run: checkov -d template
        


  DeployStack:
    runs-on: ubuntu-latest
    needs: checkov
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: 'eu-central-1'
      - name: Install dependencies
        run: yarn
      - name: Synth stack
        run: yarn cdk synth
      - name: Deploy stack
        run: yarn cdk deploy --all --require-approval never